#include <math.h>
#include <Adafruit_PCF8591.h>
// Make sure that this is set to the value in volts of VCC
#define ADC_REFERENCE_VOLTAGE 5.0
Adafruit_PCF8591 pcf = Adafruit_PCF8591();

void setup() {
  Serial.begin(115200);
  while (!Serial)
    delay(10);

  Serial.println("# Adafruit PCF8591 demo");
  if (!pcf.begin()) {
    Serial.println("# Adafruit PCF8591 not found!");
    while (1)
      delay(10);
  }
  Serial.println("# Adafruit PCF8591 found");
  pcf.enableDAC(true);

  Serial.println("AIN0, AIN1, AIN2, AIN3");
}

uint8_t sine_wave[256] = {'0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F', '0x7F'};

void loop() {

    for (int i = 0 ; i < 256; i++){
    pcf.analogWrite(sine_wave[i]);
  }

}

